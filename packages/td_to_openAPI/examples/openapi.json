{
    "openapi": "3.0.3",
    "info": {
        "title": "MyCoffeeMaker-Home",
        "version": "unknown",
        "description": "Order your coffee remotely!",
        "x-@context": [
            "https://www.w3.org/2019/wot/td/v1",
            {
                "cov": "http://www.example.org/coap-binding#"
            },
            {
                "@language": "en"
            }
        ],
        "x-@type": "Thing",
        "x-id": "urn:dev:home:coff:type123-SNR123456",
        "x-name": "MyCoffeeMaker"
    },
    "paths": {
        "/status": {
            "get": {
                "responses": {
                    "200": {
                        "description": "default success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "enum": ["Standby", "Grinding", "Brewing", "Filling", "Error"],
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "example": "Brewing"
                            }
                        }
                    },
                    "default": {
                        "description": "some error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "tags": ["properties"],
                "description": "op:readproperty",
                "summary": "status",
                "servers": [
                    {
                        "url": "http://mycoffeemaker.example.com"
                    }
                ]
            }
        },
        "/fillstates": {
            "get": {
                "responses": {
                    "200": {
                        "description": "default success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "readOnly": true,
                                    "properties": {
                                        "water": {
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 100
                                        },
                                        "coffeebeans": {
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 100
                                        },
                                        "bin": {
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 100
                                        }
                                    },
                                    "type": "object"
                                },
                                "example": {
                                    "water": 66.50774024967545,
                                    "coffeebeans": 66.9186659728265,
                                    "bin": 53.82116477802556
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "some error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "tags": ["properties"],
                "description": "op:readproperty",
                "summary": "fillstates",
                "servers": [
                    {
                        "url": "http://mycoffeemaker.example.com"
                    }
                ]
            }
        },
        "/brewcoffee": {
            "post": {
                "responses": {
                    "200": {
                        "description": "default success response",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "some error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "enum": ["Espresso", "EspressoDoppio", "Coffee", "HotWater"],
                                "type": "string"
                            },
                            "example": "Espresso"
                        }
                    }
                },
                "tags": ["actions"],
                "description": "op:invokeaction",
                "summary": "brewCoffee",
                "servers": [
                    {
                        "url": "http://mycoffeemaker.example.com"
                    }
                ]
            }
        },
        "/switchoff": {
            "post": {
                "responses": {
                    "200": {
                        "description": "default success response",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "some error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "tags": ["actions"],
                "description": "op:invokeaction",
                "summary": "switchOff",
                "servers": [
                    {
                        "url": "http://mycoffeemaker.example.com"
                    }
                ]
            }
        },
        "/waterempty": {
            "get": {
                "responses": {
                    "200": {
                        "description": "default success response",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "some error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "tags": ["events"],
                "description": "The water fillstate is below a certain level!\nop:subscribeevent",
                "summary": "waterEmpty",
                "servers": [
                    {
                        "url": "http://mycoffeemaker.example.com"
                    }
                ]
            }
        },
        "/coffeeempty": {
            "get": {
                "responses": {
                    "200": {
                        "description": "default success response",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "some error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "tags": ["events"],
                "description": "The coffee bean fillstate is below a certain amount!\nop:subscribeevent",
                "summary": "coffeeEmpty",
                "servers": [
                    {
                        "url": "http://mycoffeemaker.example.com"
                    }
                ]
            }
        },
        "/binfull": {
            "get": {
                "responses": {
                    "200": {
                        "description": "default success response",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "some error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "tags": ["events"],
                "description": "The bin  fillstate is above a certain level!\nop:subscribeevent",
                "summary": "binFull",
                "servers": [
                    {
                        "url": "http://mycoffeemaker.example.com"
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "properties",
            "description": "A property can expose a variable of a Thing, this variable might be readable, writable and/or observable.",
            "externalDocs": {
                "url": "https://www.w3.org/TR/wot-thing-description/#propertyaffordance",
                "description": "Find out more about Property Affordances."
            }
        },
        {
            "name": "actions",
            "description": "An action can expose something to be executed by a Thing, an action can be invoked.",
            "externalDocs": {
                "url": "https://www.w3.org/TR/wot-thing-description/#actionaffordance",
                "description": "Find out more about Action Affordances."
            }
        },
        {
            "name": "events",
            "description": "An event can expose a notification by a Thing, this notification can be subscribed and/or unsubscribed.",
            "externalDocs": {
                "url": "https://www.w3.org/TR/wot-thing-description/#eventaffordance",
                "description": "Find out more about Event Affordances."
            }
        }
    ],
    "components": {
        "securitySchemes": {
            "basic_sc": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "security": [{}]
}
