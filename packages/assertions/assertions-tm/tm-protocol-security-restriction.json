{
    "title": "tm-protocol-security-restriction",
    "description": "A Thing Model MAY NOT contain instance specific Protocol Binding and security information such as endpoint addresses.",
    "$schema ": "http://json-schema.org/draft/2019-09/schema#",
    "is-complex":true,
    "definitions": {
        "anyUri": {
            "type": "string"
        },
        "security": {
            "oneOf": [
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                {
                    "type": "string"
                }
            ]
        },
        "scopes": {
            "oneOf": [
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                {
                    "type": "string"
                }
            ]
        },
        "subprotocol": {
            "type": "string",
            "examples": [
                "longpoll",
                "websub",
                "sse"
            ]
        },
        "bcp47_string": {
            "type": "string",
            "pattern": "^(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$"
        },
        "type_declaration": {
            "oneOf": [
                {
                    "type": "string",
                    "not": {
                        "const": "tm:ThingModel"
                    }
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "not": {
                            "const": "tm:ThingModel"
                        }
                    }
                }
            ]
        },
        "dataSchema-type": {
            "type": "string",
            "enum": [
                "boolean",
                "integer",
                "number",
                "string",
                "object",
                "array",
                "null"
            ]
        },
        "dataSchema": {
            "type": "object"
        },
        "form_element_base": {
            "type": "object",
            "properties": {
                "href": {
                    "$ref": "#/definitions/anyUri"
                },
                "security": {
                    "$ref": "#/definitions/security"
                }
            },
            "required": [
                "href"
            ],
            "additionalProperties": true
        },
        "form_element_property": {
            "allOf": [
                {
                    "$ref": "#/definitions/form_element_base"
                }
            ]
        },
        "form_element_action": {
            "allOf": [
                {
                    "$ref": "#/definitions/form_element_base"
                }
            ]
        },
        "form_element_event": {
            "allOf": [
                {
                    "$ref": "#/definitions/form_element_base"
                }
            ],
            "type": "object"
        },
        "form_element_root": {
            "allOf": [
                {
                    "$ref": "#/definitions/form_element_base"
                }
            ],
            "type": "object",
            "properties": {
                "op": {
                    "oneOf": [
                        {
                            "type": "string",
                            "enum": [
                                "readallproperties",
                                "writeallproperties",
                                "readmultipleproperties",
                                "writemultipleproperties",
                                "observeallproperties",
                                "unobserveallproperties",
                                "queryallactions",
                                "subscribeallevents",
                                "unsubscribeallevents"
                            ]
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "readallproperties",
                                    "writeallproperties",
                                    "readmultipleproperties",
                                    "writemultipleproperties",
                                    "observeallproperties",
                                    "unobserveallproperties",
                                    "queryallactions",
                                    "subscribeallevents",
                                    "unsubscribeallevents"
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "form": {
            "$comment": "This is NOT for validation purposes but for automatic generation of TS types. For more info, please see: https://github.com/w3c/wot-thing-description/pull/1319#issuecomment-994950057",
            "oneOf": [
                {
                    "$ref": "#/definitions/form_element_property"
                },
                {
                    "$ref": "#/definitions/form_element_action"
                },
                {
                    "$ref": "#/definitions/form_element_event"
                },
                {
                    "$ref": "#/definitions/form_element_root"
                }
            ]
        },
        "property_element": {
            "type": "object",
            "properties": {
                "forms": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/form_element_property"
                    }
                }
            },
            "required": [
                "forms"
            ]
        },
        "action_element": {
            "type": "object",
            "properties": {
                "forms": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/form_element_action"
                    }
                }
            },
            "required": [
                "forms"
            ],
            "additionalProperties": true
        },
        "event_element": {
            "type": "object",
            "properties": {
                "forms": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/form_element_event"
                    }
                }
            },
            "required": [
                "forms"
            ],
            "additionalProperties": true
        },
        "additionalSecurityScheme": {
            "description": "Applies to additional SecuritySchemes not defined in the WoT TD specification.",
            "$comment": "Additional SecuritySchemes should always be defined via a context extension, using a prefixed value for the scheme. This prefix (e.g. 'ace', see the example below) must contain at least one character in order to reference a valid JSON-LD context extension.",
            "examples": [
                {
                    "scheme": "ace:ACESecurityScheme",
                    "ace:as": "coaps://as.example.com/token",
                    "ace:audience": "coaps://rs.example.com",
                    "ace:scopes": [
                        "limited",
                        "special"
                    ],
                    "ace:cnonce": true
                }
            ],
            "type": "object",
            "properties": {
                "scheme": {
                    "type": "string",
                    "pattern": ".+:.*"
                }
            },
            "required": [
                "scheme"
            ],
            "additionalProperties": true
        },
        "noSecurityScheme": {
            "type": "object",
            "properties": {
                "scheme": {
                    "type": "string",
                    "enum": [
                        "nosec"
                    ]
                }
            },
            "required": [
                "scheme"
            ],
            "additionalProperties": true
        },
        "autoSecurityScheme": {
            "type": "object",
            "properties": {
                "scheme": {
                    "type": "string",
                    "enum": [
                        "auto"
                    ]
                }
            },
            "required": [
                "scheme"
            ],
            "additionalProperties": true
        },
        "comboSecurityScheme":{
            "type": "object",
            "properties": {
                "scheme": {
                    "type": "string",
                    "enum": [
                        "combo"
                    ]
                }
            },
            "required": [
                "scheme"
            ],
            "additionalProperties": true
        },
        "basicSecurityScheme": {
            "type": "object",
            "properties": {
                "scheme": {
                    "type": "string",
                    "enum": [
                        "basic"
                    ]
                }
            },
            "required": [
                "scheme"
            ],
            "additionalProperties": true
        },
        "digestSecurityScheme": {
            "type": "object",
            "properties": {
                "scheme": {
                    "type": "string",
                    "enum": [
                        "digest"
                    ]
                }
            },
            "required": [
                "scheme"
            ],
            "additionalProperties": true
        },
        "apiKeySecurityScheme": {
            "type": "object",
            "properties": {
                "scheme": {
                    "type": "string",
                    "enum": [
                        "apikey"
                    ]
                }
            },
            "required": [
                "scheme"
            ],
            "additionalProperties": true
        },
        "bearerSecurityScheme": {
            "type": "object",
            "properties": {
                "scheme": {
                    "type": "string",
                    "enum": [
                        "bearer"
                    ]
                }
            },
            "required": [
                "scheme"
            ],
            "additionalProperties": true
        },
        "pskSecurityScheme": {
            "type": "object",
            "properties": {
                "scheme": {
                    "type": "string",
                    "enum": [
                        "psk"
                    ]
                }
            },
            "required": [
                "scheme"
            ],
            "additionalProperties": true
        },
        "oAuth2SecurityScheme": {
            "type": "object",
            "properties": {
                "scheme": {
                    "type": "string",
                    "enum": [
                        "oauth2"
                    ]
                }
            },
            "required": [
                "scheme"
            ],
            "additionalProperties": true
        },
        "securityScheme": {
            "oneOf": [
                {
                    "$ref": "#/definitions/noSecurityScheme"
                },
                {
                    "$ref": "#/definitions/autoSecurityScheme"
                },
                {
                    "$ref": "#/definitions/comboSecurityScheme"
                },
                {
                    "$ref": "#/definitions/basicSecurityScheme"
                },
                {
                    "$ref": "#/definitions/digestSecurityScheme"
                },
                {
                    "$ref": "#/definitions/apiKeySecurityScheme"
                },
                {
                    "$ref": "#/definitions/bearerSecurityScheme"
                },
                {
                    "$ref": "#/definitions/pskSecurityScheme"
                },
                {
                    "$ref": "#/definitions/oAuth2SecurityScheme"
                },
                {
                    "$ref": "#/definitions/additionalSecurityScheme"
                }
            ]
        }
    },
    "if":{
        "type": "object",
        "properties": {
            "properties": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/definitions/property_element"
                }
            },
            "actions": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/definitions/action_element"
                }
            },
            "events": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/definitions/event_element"
                }
            },
            "forms": {
                "type": "array",
                "minItems": 1,
                "items": {
                    "$ref": "#/definitions/form_element_root"
                }
            },
            "base": {
                "$ref": "#/definitions/anyUri"
            },
            "securityDefinitions": {
                "type": "object",
                "minProperties": 1,
                "additionalProperties": {
                    "$ref": "#/definitions/securityScheme"
                }
            },
            "security": {
                "oneOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "required": [
            "security",
            "securityDefinitions"
        ]
    },
    "else":{
        "const": "tm-protocol-security-restriction=pass"
    }
}
